import logging

from aiogram import Router, F
from aiogram.types import CallbackQuery, ReplyKeyboardRemove, InlineKeyboardMarkup
from aiogram.fsm.state import default_state
from keyboards.keyboard import get_test_task_keyboard

router = Router()

logger = logging.getLogger(__name__)
    
@router.callback_query(F.data == 'test_task', default_state)
async def test(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer('üéâ  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –∑–∞–∫—Ä–µ–ø–∏—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è C++.\n\nüìö  –ó–∞–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Ç–µ–º–∞–º, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∏–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–ª—è –≤–∞—Å —Ä–∞–∑–¥–µ–ª. \n\nüíª  –ü—Ä–∏—è—Ç–Ω—ã–π –±–æ–Ω—É—Å: –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –≤–∞–º –Ω–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–º–ø—å—é—Ç–µ—Ä! –£—á–∏—Ç–µ—Å—å –≤ –ª—é–±–æ–º —É–¥–æ–±–Ω–æ–º –º–µ—Å—Ç–µ! \n\nüöÄ  –ì–æ—Ç–æ–≤—ã –∫ –∏—Å–ø—ã—Ç–∞–Ω–∏—é? –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ - –∏ –≤–ø–µ—Ä–µ–¥!', reply_markup=get_test_task_keyboard())
    
@router.callback_query(F.data == 'answer_test_false', default_state)
async def test(callback: CallbackQuery):
    await callback.message.answer('–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! üòâ')

@router.callback_query(F.data == 'answer_test_true', default_state)
async def test(callback: CallbackQuery):
    await callback.message.edit_reply_markup()
    await callback.message.answer('–û—Ç–ª–∏—á–Ω–æ! üéâ \n\n–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –∑–∞–¥–∞—á–µ–π!  üëè')